\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\bibstyle{biblatex}
\bibdata{report-blx,references}
\citation{biblatex-control}
\abx@aux@refcontext{nty/global//global/global}
\@writefile{toc}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lof}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\@writefile{lot}{\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax }
\newlabel{cha:references}{{}{2}{\listalgorithmname \@mkboth {\MakeUppercase {\listalgorithmname }}{\MakeUppercase {\listalgorithmname }}}{section*.3}{}}
\citation{P2PATH}
\abx@aux@cite{P2PATH}
\abx@aux@segm{0}{0}{P2PATH}
\citation{RAD}
\abx@aux@cite{RAD}
\abx@aux@segm{0}{0}{RAD}
\citation{RAD3}
\abx@aux@cite{RAD3}
\abx@aux@segm{0}{0}{RAD3}
\citation{DST}
\abx@aux@cite{DST}
\abx@aux@segm{0}{0}{DST}
\newlabel{cha:introduction}{{}{3}{\listalgorithmname \@mkboth {\MakeUppercase {\listalgorithmname }}{\MakeUppercase {\listalgorithmname }}}{section*.3}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {1}Global illumination}{3}{section.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Physically based methods}{3}{subsection.1.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.1}Pathtracing}{3}{subsubsection.1.1.1}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsubsection}{\numberline {1.1.2}Radiosity}{3}{subsubsection.1.1.2}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces How radiosity globally illuminates a scene. With each iteration there are more light emitters, meaning that there are more possible patches that can be illuminated. In the first iteration, the only light-emitters are the windows (not visible in the frame). After 16 iterations the scene is sufficiently saturated.\relax }}{4}{figure.caption.5}}
\newlabel{fig:radiosity}{{2}{4}{How radiosity globally illuminates a scene. With each iteration there are more light emitters, meaning that there are more possible patches that can be illuminated. In the first iteration, the only light-emitters are the windows (not visible in the frame). After 16 iterations the scene is sufficiently saturated.\relax }{figure.caption.5}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {1.2}Computational difficulties of physically correct methods}{4}{subsection.1.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {2}Deferred rendering}{4}{section.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}How deferred shading handles lighting more efficiently}{4}{subsection.2.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces The OpenGL graphics pipeline. All steps are mandatory, but the ones within blue boxes are also programmable and the ones with dashed borders can be deferred or forwarded. Note that the vertex-shader and geometry-shader do not neccesarily compute any shading or colors, but can be programmed to do so. They are called shaders for historical reasons, which might be a little irritating.\relax }}{5}{figure.caption.6}}
\newlabel{fig:graphics_pipeline}{{3}{5}{The OpenGL graphics pipeline. All steps are mandatory, but the ones within blue boxes are also programmable and the ones with dashed borders can be deferred or forwarded. Note that the vertex-shader and geometry-shader do not neccesarily compute any shading or colors, but can be programmed to do so. They are called shaders for historical reasons, which might be a little irritating.\relax }{figure.caption.6}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces A scene that was rendered using deferred shading. The objects are locally illuminated by point-lights using g-buffers.\relax }}{5}{figure.caption.7}}
\newlabel{fig:deferred_shading}{{4}{5}{A scene that was rendered using deferred shading. The objects are locally illuminated by point-lights using g-buffers.\relax }{figure.caption.7}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {3}Geometry-buffer (g-buffer)}{5}{section.3}}
\citation{DST}
\abx@aux@segm{0}{0}{DST}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.1}Frame-buffer}{6}{subsection.3.1}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Example of a frame-buffer (also called image-buffer). It shows a cornell box with pitch black walls containing two yellow cuboids.\relax }}{6}{figure.caption.8}}
\newlabel{fig:frame_buffer}{{5}{6}{Example of a frame-buffer (also called image-buffer). It shows a cornell box with pitch black walls containing two yellow cuboids.\relax }{figure.caption.8}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.2}Z-buffer}{6}{subsection.3.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.3}Normal-buffer}{6}{subsection.3.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {3.4}Computing local illumination using g-buffers (deferred shading)}{6}{subsection.3.4}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Example of a z-buffer. Since the z-buffer only stores distances as float values deduced by dividing each z-value by the distance of the furthest away object from the cameras point of view, which is the maximum z-value, they are interpreted as a grayscale value which is turned into an RGB vector by multiplying $(z, z, z)$ with $255$.\relax }}{7}{figure.caption.9}}
\newlabel{fig:z_buffer}{{6}{7}{Example of a z-buffer. Since the z-buffer only stores distances as float values deduced by dividing each z-value by the distance of the furthest away object from the cameras point of view, which is the maximum z-value, they are interpreted as a grayscale value which is turned into an RGB vector by multiplying $(z, z, z)$ with $255$.\relax }{figure.caption.9}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Example of a normal-buffer. Normal vectors in this buffer are normalized, meaning their component values range from -1 to 1. Since negative normals would cause negative RGB values, we add $(1, 1, 1)$ and scale with $255/2$, which results in a usable RGB color.\relax }}{7}{figure.caption.10}}
\newlabel{fig:normal_buffer}{{7}{7}{Example of a normal-buffer. Normal vectors in this buffer are normalized, meaning their component values range from -1 to 1. Since negative normals would cause negative RGB values, we add $(1, 1, 1)$ and scale with $255/2$, which results in a usable RGB color.\relax }{figure.caption.10}{}}
\citation{AOM}
\abx@aux@cite{AOM}
\abx@aux@segm{0}{0}{AOM}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {4}Visual effects}{8}{section.4}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Diverse visual effects caused by global illumination inside a cornell box. The image was rendered using pathtracing.\relax }}{8}{figure.caption.11}}
\newlabel{fig:visual_effects}{{8}{8}{Diverse visual effects caused by global illumination inside a cornell box. The image was rendered using pathtracing.\relax }{figure.caption.11}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Ambient occlusion}{8}{subsection.4.1}}
\citation{PBCB}
\abx@aux@cite{PBCB}
\abx@aux@segm{0}{0}{PBCB}
\citation{NOIT}
\abx@aux@cite{NOIT}
\abx@aux@segm{0}{0}{NOIT}
\citation{REFL}
\abx@aux@cite{REFL}
\abx@aux@segm{0}{0}{REFL}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces How ambient occlusion affects the realism of a rendered 3d model. The "in-betweens" of the model appear to have depth.\relax }}{9}{figure.caption.12}}
\newlabel{fig:ambient_occlusion}{{9}{9}{How ambient occlusion affects the realism of a rendered 3d model. The "in-betweens" of the model appear to have depth.\relax }{figure.caption.12}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Color bleeding}{9}{subsection.4.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.3}Soft shadows}{9}{subsection.4.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.4}Transparency}{9}{subsection.4.4}}
\citation{DOF2}
\abx@aux@cite{DOF2}
\abx@aux@segm{0}{0}{DOF2}
\citation{MOB}
\abx@aux@cite{MOB}
\abx@aux@segm{0}{0}{MOB}
\citation{Mara2016DeepGBuffer}
\abx@aux@cite{Mara2016DeepGBuffer}
\abx@aux@segm{0}{0}{Mara2016DeepGBuffer}
\citation{Mara2016DeepGBuffer}
\abx@aux@segm{0}{0}{Mara2016DeepGBuffer}
\citation{MFEKB}
\abx@aux@cite{MFEKB}
\abx@aux@segm{0}{0}{MFEKB}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.5}Reflection}{10}{subsection.4.5}}
\newlabel{sec:reflection}{{4.5}{10}{Reflection}{subsection.4.5}{}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces How a cube-map is rendered. The black sphere in the lower image represents the camera. The resulting six renders are put together in the cube-map in the upper image.\relax }}{10}{figure.caption.13}}
\newlabel{fig:cube_map}{{10}{10}{How a cube-map is rendered. The black sphere in the lower image represents the camera. The resulting six renders are put together in the cube-map in the upper image.\relax }{figure.caption.13}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.6}Depth of field}{10}{subsection.4.6}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {4.7}Motion blur}{10}{subsection.4.7}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Depth of field in action. The camera lens is focused on the center sphere, making it appear sharp. The other spheres appear to be blurry.\relax }}{11}{figure.caption.14}}
\newlabel{fig:depth_of_field}{{11}{11}{Depth of field in action. The camera lens is focused on the center sphere, making it appear sharp. The other spheres appear to be blurry.\relax }{figure.caption.14}{}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {5}Deep g-buffer}{11}{section.5}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Generating a 2-layer deep g-buffer}{11}{subsection.5.1}}
\citation{RSM}
\abx@aux@cite{RSM}
\abx@aux@segm{0}{0}{RSM}
\citation{TSTMT}
\abx@aux@cite{TSTMT}
\abx@aux@segm{0}{0}{TSTMT}
\newlabel{alg:two_pass_strawman}{{\caption@xref {alg:two_pass_strawman}{ on input line 244}}{12}{Generating a 2-layer deep g-buffer}{Item.4}{}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {1}{\ignorespaces Strawman two-pass generation algorithm for generating 2-layer deep g-buffers\relax }}{12}{algorithm.1}}
\citation{SAO}
\abx@aux@cite{SAO}
\abx@aux@segm{0}{0}{SAO}
\citation{Mara2016DeepGBuffer}
\abx@aux@segm{0}{0}{Mara2016DeepGBuffer}
\citation{RTAII}
\abx@aux@cite{RTAII}
\abx@aux@segm{0}{0}{RTAII}
\newlabel{alg:one_pass_strawman}{{\caption@xref {alg:one_pass_strawman}{ on input line 265}}{13}{Generating a 2-layer deep g-buffer}{lstnumber.-1.16}{}}
\@writefile{loa}{\defcounter {refsection}{0}\relax }\@writefile{loa}{\contentsline {algorithm}{\numberline {2}{\ignorespaces An improved one-pass algorithm for generating 2-layer deep g-buffers\relax }}{13}{algorithm.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.2}Global illumination using 2-layer deep g-buffer}{13}{subsection.5.2}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.3}Screen space ambient occlusion using 2-layer deep g-buffer}{13}{subsection.5.3}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.4}Screen space radiosity using 2-layer deep g-buffer}{14}{subsection.5.4}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {subsection}{\numberline {5.5}Screen space reflections using 2-layer deep g-buffer}{15}{subsection.5.5}}
\@writefile{toc}{\defcounter {refsection}{0}\relax }\@writefile{toc}{\contentsline {section}{\numberline {6}Conclusion}{15}{section.6}}
\@writefile{lof}{\defcounter {refsection}{0}\relax }\@writefile{lof}{\contentsline {figure}{\numberline {12}{\ignorespaces An image rendered without (left) and with the usage of 2-layer deep g-buffers (right). The image was generated in 10.8ms at 1080p using NVIDIA GeForce 980, which implies a theoretical framerate of 92 frames per second.\relax }}{15}{figure.caption.15}}
\newlabel{fig:deep_g_buffer_render}{{12}{15}{An image rendered without (left) and with the usage of 2-layer deep g-buffers (right). The image was generated in 10.8ms at 1080p using NVIDIA GeForce 980, which implies a theoretical framerate of 92 frames per second.\relax }{figure.caption.15}{}}
\abx@aux@refcontextdefaultsdone
\abx@aux@defaultrefcontext{0}{AOM}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{MFEKB}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{PBCB}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{P2PATH}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{RAD3}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{RTAII}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{RSM}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{NOIT}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{DST}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{TSTMT}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{RAD}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{Mara2016DeepGBuffer}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{REFL}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{MOB}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{SAO}{nty/global//global/global}
\abx@aux@defaultrefcontext{0}{DOF2}{nty/global//global/global}
